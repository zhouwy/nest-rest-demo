// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int         @id @default(autoincrement())
    name      String?
    userEmail UserEmail?
    userSms   UserSms?
    userOAuth UserOauth[]
    role      Role[]

    @@map("user")
}

model UserEmail {
    id                     Int       @id @default(autoincrement())
    email                  String    @unique
    password               String
    confirmToken           String?   @map("confirm_token")
    confirmTokenCreateTime DateTime? @map("confirmToken_create_time")
    resetToken             String?   @map("reset_token")
    resetTokenCreateTime   DateTime? @map("resetToken_create_time")
    user                   User      @relation(fields: [userId], references: [id])
    userId                 Int       @unique

    @@map("user_email")
}

model UserSms {
    id         Int       @id @default(autoincrement())
    phone      String    @unique
    user       User      @relation(fields: [userId], references: [id])
    userId     Int       @unique

    @@map("user_sms")
}

model UserOauth {
    id           Int    @id @default(autoincrement())
    provider     String
    openid       String
    accessToken  String @map("access_token")
    refreshToken String @map("refresh_token")
    user         User   @relation(fields: [userId], references: [id])
    userId       Int

    @@map("user_oauth")
    @@unique([provider, openid])
}

model Role {
    id         Int          @id @default(autoincrement())
    name       String       @unique
    user       User[]
    permission Permission[]

    @@map("role")
}

model Permission {
    id         Int     @id @default(autoincrement())
    action     String
    subject    String
    inverted   Boolean @default(false)
    conditions Json?
    role       Role[]

    @@map("permission")
}
